Here’s how you can explain the issue and your recommendation in a structured way:

Current Situation

	1.	Pipeline Captures Limited Metrics:
	•	The pipeline is currently configured to capture:
	•	Critical Component Count: 2
	•	Severe Component Count: 0
	•	Moderate Component Count: 31
	•	Affected Component Count: 33
	2.	Portal Displays Additional Metrics:
	•	The Nexus IQ Portal prominently displays a different metric, moderatePolicyViolationCount, which is 35 in this case.
	3.	Mismatch in Metrics:
	•	The pipeline does not currently capture or display the moderatePolicyViolationCount metric, leading to a discrepancy between the pipeline output and the portal.
	•	This discrepancy misleads developers because they see 35 moderate violations in the portal but only 31 moderate components in the pipeline.

Key Technical Insight

During troubleshooting, it was discovered that the moderatePolicyViolationCount parameter is available as part of the FOSS results object returned by the Nexus Policy Evaluation step but is not currently being captured in the pipeline.
	•	Difference Between Metrics:
	•	Moderate Component Count (31): Counts the number of components affected by moderate-level violations.
	•	Moderate Policy Violation Count (35): Counts the total number of moderate-level policy violations, including multiple violations on the same component.

The portal emphasizes policy violations, while the pipeline is currently set up to focus on component counts, resulting in a mismatch.

Impact of the Issue

	1.	Developer Confusion:
	•	Developers compare the pipeline output with the portal and see different numbers for moderate violations, leading to confusion.
	•	They assume the pipeline output is incorrect because it doesn’t align with the portal.
	2.	Misleading Information:
	•	The pipeline’s focus on Moderate Component Count is not aligned with the portal’s focus on Moderate Policy Violation Count, which is the primary metric shown to users.

Proposed Solution

	1.	Capture moderatePolicyViolationCount:
	•	Update the pipeline to capture and display the moderatePolicyViolationCount metric alongside the existing metrics.
	•	This ensures the pipeline output aligns with the portal, reducing confusion for developers.
	2.	Pipeline Script Adjustment:
	•	Modify the pipeline script to include moderatePolicyViolationCount by accessing it from the FOSS results object:

def evaluationResult = nexusPolicyEvaluation(
    applicationId: 'my-app-id',
    stageId: 'build',
    scanTargets: '**/*.jar',
    failBuildOnNetworkError: false,
    serverUrl: 'https://nexus.example.com',
    iqCredentialsId: 'nexus-credentials-id'
)

echo "Critical Component Count: ${evaluationResult.criticalComponentCount}"
echo "Severe Component Count: ${evaluationResult.severeComponentCount}"
echo "Moderate Component Count: ${evaluationResult.moderateComponentCount}"
echo "Affected Component Count: ${evaluationResult.affectedComponentCount}"
echo "Moderate Policy Violation Count: ${evaluationResult.moderatePolicyViolationCount}" // New metric


	3.	Update Reporting Documentation:
	•	Clearly explain the distinction between component counts and policy violation counts to avoid misunderstandings.
	•	Highlight that multiple policy violations can exist for a single component, resulting in differing counts.

Benefits of the Solution

	•	Consistency: Aligns pipeline output with the Nexus IQ portal, ensuring consistency in metrics.
	•	Clarity for Developers: Developers can trust the pipeline results as they match the primary metrics displayed in the portal.
	•	Enhanced Reporting: Capturing moderatePolicyViolationCount adds more detail to the pipeline output, aiding compliance and governance reviews.

Conclusion

The pipeline should be updated to capture moderatePolicyViolationCount in addition to the existing metrics. This will resolve the discrepancy between the pipeline output and the portal, providing clarity and ensuring accurate reporting for developers.