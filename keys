import groovy.json.JsonSlurper
import groovy.json.JsonOutput

def jsonText = readFile('tester.json')
def json = new JsonSlurper().parseText(jsonText)

// Load HTML template from shared library resources
def htmlTemplate = libraryResource('email_template.html')

// Build dynamic table HTML
def tableBody = new StringBuilder()

json.each { imageName, envs ->
    tableBody << "<h3>Image: <code>${imageName}</code></h3>\n"
    tableBody << """
    <table>
      <thead>
        <tr>
          <th>Environment</th>
          <th>ACL Tag</th>
          <th>Base Image</th>
          <th>Image Version</th>
          <th>Rebuild Status</th>
          <th>New Tag</th>
        </tr>
      </thead>
      <tbody>
    """
    envs.each { envName, envData ->
        def aclTag = envData.acl_tag ?: '-'
        def baseImg = envData.base_image_name ?: '-'
        def version = envData.base_image_version ?: '-'
        def status = envData.aci_rebuild_status ?: 'Pending'
        def newTag = "${imageName}:${aclTag}"

        tableBody << """
        <tr>
          <td>${envName}</td>
          <td><span class="tag">${aclTag}</span></td>
          <td>${baseImg}</td>
          <td>${version}</td>
          <td style="color:green;">${status}</td>
          <td><code>${newTag}</code></td>
        </tr>
        """
    }

    tableBody << "</tbody></table>\n"
}

// Replace placeholders in HTML
def htmlFinal = htmlTemplate
    .replace('$$TABLE_BODY$$', tableBody.toString())
    .replace('$$BUILD_DATE$$', new Date().format("yyyy-MM-dd HH:mm:ss"))

// Save or send
writeFile file: 'final_email_report.html', text: htmlFinal

// Optional: email it
// emailext(subject: "Container Repackage Report", body: htmlFinal, mimeType: 'text/html', to: 'team@example.com')