Got it! If you want the animation to repeat 5 bounces every minute (bouncing for 5 seconds and resting for 55 seconds), we can achieve this by combining setInterval for the repeating cycle and setTimeout for stopping the animation after 5 bounces.

Here’s the corrected implementation:

Updated TypeScript: Controlled Animation for 5 Bounces Per Minute

import { Component, OnInit } from '@angular/core';

@Component({
  selector: 'app-smart-assistant',
  templateUrl: './smart-assistant.component.html',
  styleUrls: ['./smart-assistant.component.css']
})
export class SmartAssistantComponent implements OnInit {
  animationClass: string = ''; // To dynamically add/remove the animation class
  private animationInterval: any; // Timer for 1-minute cycles
  private bounceDuration: number = 5000; // Duration for 5 bounces (5 seconds)
  private restDuration: number = 55000; // Rest duration (55 seconds)

  ngOnInit(): void {
    this.startControlledBouncing();
  }

  // Starts the controlled bouncing logic
  startControlledBouncing(): void {
    // Trigger the animation cycle every 1 minute
    this.animationInterval = setInterval(() => {
      this.triggerAnimation();
    }, 60000); // 1-minute interval

    // Start the first animation immediately
    this.triggerAnimation();
  }

  // Triggers the bouncing animation for 5 seconds
  triggerAnimation(): void {
    this.animationClass = 'bouncing'; // Add the animation class to start bouncing
    setTimeout(() => {
      this.animationClass = ''; // Remove the animation class after 5 seconds
    }, this.bounceDuration); // Stop bouncing after 5 seconds
  }
}

Explanation:

	1.	Bouncing for 5 Seconds:
	•	The animation is triggered by adding the class bouncing to the element.
	•	The class is removed after 5 seconds (equal to the duration of 5 bounces) using setTimeout.
	2.	Rest for 55 Seconds:
	•	The setInterval repeats the bouncing cycle every 60 seconds (1 minute).
	•	By removing the class after 5 seconds, the element rests for 55 seconds before bouncing again.
	3.	Immediate Start:
	•	The first animation cycle starts immediately by calling triggerAnimation() directly within ngOnInit.
	4.	Reusable Configuration:
	•	bounceDuration and restDuration variables make it easy to tweak the timing logic.

CSS Animation (Bouncing Effect)

Ensure you have a bouncing class in your CSS to create the bounce effect:

.bouncing {
  animation: bounce 1s ease infinite;
}

@keyframes bounce {
  0%, 20%, 50%, 80%, 100% {
    transform: translateY(0);
  }
  40% {
    transform: translateY(-20px);
  }
  60% {
    transform: translateY(-10px);
  }
}

Final Flow:

	1.	Every Minute:
	•	The animation triggers and lasts for 5 seconds (5 bounces).
	2.	Rest:
	•	After 5 seconds, the animation stops and rests for 55 seconds.
	3.	Repeat:
	•	The cycle repeats every 60 seconds indefinitely.

Let me know if you face any issues or need further customization!